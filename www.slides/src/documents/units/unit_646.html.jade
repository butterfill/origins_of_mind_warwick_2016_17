---
layout: 'deck_unit'
title: "Syntax: Knowledge or Core Knowledge?"
tags: []
description: "Given that humans, infant and adult, do represent facts concerning the syntax of languages, what grounds are there to deny that these representations are knowledge?"
depends: ['']
source: ['']
duration: 5
book: []
exercises: []
exercises_fast: []
---

include ../../../fragments/unit_mixins
include ../../../fragments/origins_mixins


+slide_middle
  .notes Given that humans, infant and adult, do represent facts concerning the syntax of languages, what grounds are there to deny that these representations are knowledge?"
  +question_mark
  p.center  Are humans’ representations of syntax knowledge?
  .notes In the previous lecture I answered this question too quickly.  Afterwards someone pointed out that the considerations I had offered are not conclusive.  So I wanted to return to this point briefly.
  .notes Why bother?  I think it matters because (i) the case of syntax is well-understood; (ii) if representations of syntax are not knowledge, the case of syntax provides one possible model for theorising about core knowledge; and (iii) whereas in cases like objects, knowledge knowledge comes relatively early in development (maybe a year or two after core knowledge), in the case of syntax knowledge knowledge typically requires a course in linguistics.
  .notes This last point, (iii), makes it a paradigm case of development by rediscovery.

+slide
  .step1.blur-after
    p Humans can’t usually report any relevant facts about syntax.
    p Reply: maybe they know but don’t know they know.
  .step2.slide.em-above
    p.handout.show ‘It is of the essence of a belief [or knowledge] state that it be at the service of many distinct projects, and that its influence on any project be mediated by other beliefs.’
    .handout.ctd \citep[p.\ 337]{Evans:1981pc}
    p.right Evans 1981, p. 337
  .step3.slide.em-above
    p Humans’ representations concerning syntax are tied to a single project.
    p (One requirement for this is that they exhibit limited accessibility.)
    .notes Earlier I explained limited accessibility in terms of inferential integration with knowledge.  So the two ideas are barely different.
    
+slide_middle
  p.center aside
  .notes Aside: While we're thinking about Evans, it's worth mentioning parallels between his notion of tacit knowledge and the notion of core knowledge.
  .notes Evans' was one of the pioneers here, and his ideas have been pursued by other philosophers, so we can consider research on tacit knowledge to be a resource for understanding the notion of core knowledge.

+slide
  .notes Evans characterisation of tacit knowledge involves two suggestions.
  .step1
    .notes The first suggestion concerns similarities:
    .notes Tacit knowledge is analogous to belief at the level of input and output.
    p.handout.show ‘At the level of output, one who possesses the tacit knowledge that p is disposed to do and think some of the things which one who had the ordinary belief that p would be inclined to do an think (given the same desires).
    p.slide ‘
      span.handout.show.ctd At the level of input, one who possesses the state of tacit knowledge that p will very probably have acquired that state as the result of exposure to usage which supports of confirms … the proposition that p, and hence in circumstances which might well induce in a rational person the ordinary belief that p.’
    p.right (Evans 1981, p. 336)
    .handout.ctd \citep[p.\ 336]{Evans:1981pc}
  +blur('.step1')
  .notes Evans’ second suggestion concerns what distinguishes tacit knowledge from knowledge knowledge.
  .step2.slide.em-above
    .notes Evans’ idea was ‘that while the applicability of the generality constraint is a necessary feature of propositional attitudes, states that are intuitively subdoxastic - particularly states of input systems - are not subject to that constraint.’  \citep[p.\ 146]{Davies:1986qv}
    p The 
      span.generality-constraint generality constraint
      span  applies to knowledge knowledge but not to tacit knowledge.
    .handout ‘(It is one of the fundamental differences between human thought and the information-processing that takes place in our brains that the Generality Constraint applies to the former but not to the latter.  When we attribute to the brain computations whereby it localizes the sounds we hear, we ipso facto ascribe it to representations of the speed of sound and of the distance between the ears, without any commitment to the idea that it should be able to represent the speed of light or the distance between anything else.)’
    .handout.ctd \citep[p.\ 104, footnote 22]{Evans:1982je}
    +invert('.generality-constraint')
    .notes It would take too long to explain the generality constraint here.  If core knowledge matters to your project, I encourage you to read the chapter from Evans' book the Varieties of Reference in which the quote on your handout appears.
    
+slide_middle
  .notes Back from the aside, here's our conclusion.
  p.center  Humans’ representations of syntax aren’t knowledge because they exhibit limited accessbility and are tied to a single project. 

+slide_middle
  .notes This is maybe a good time to consider a question running through these lectures.
  +question_mark
  p.center What is the relation between core knowledge and knowledge knowledge?

+slide_middle
  p.center The Wrong View

+slide
  p.handout.show  Modules ‘provide an automatic starting engine for encyclopaedic knowledge’
  p.right Leslie 1988: 194
  .handout.ctd \citep[p.\ 194]{Leslie:1988ct}
  .notes For instance, a module that detects causal relations contributes to development by providing us with knowledge that there are certain causal relations in our environment.
  .notes This knowledge can then be used for making inferences and guiding action, just as any other knowledge can:
  .slide.em-above
    p.handout.show ‘The module … automatically provides a 
      span.conceptual conceptual identification
      span  of its input for central thought … in exactly 
      span.format the right format
      span  for inferential processes’
    p.right Leslie 1988: 193-4
    .handout.ctd \citep[p.\ 193--4]{Leslie:1988ct}
    +invert('.conceptual')
    +invert('.format')
    .notes Why is this wrong?  Because it ignores inaccessibility.
  .slide.em-above
    p But: inaccessibility

+slide_middle  
  .notes I'll re-explain development by rediscovery with syntax as the illustration?  
  .notes I don't think you should mention this in your essays, I'm still trying to work it out myself.
  p.center development as rediscovery


+slide
  svg(xmlns='http://www.w3.org/2000/svg', width='686px', height='469px', xmlns:xlink='http://www.w3.org/1999/xlink', version='1.1', style='background-color: rgb(0, 0, 0);')
    g(transform='translate(0.5,0.5)')

      g.core-knowledge-of-syntax
        rect(x='2', y='157', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', pointer-events='none')
        g(transform='translate(4,161)')
          switch
            foreignobject(pointer-events='all', width='146', height='78', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') core knowledge of syntax
            text(x='73', y='50', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        path(d='M 162 207 L 162 197 L 182 197 L 182 187 L 212 202 L 182 217 L 182 207 Z', fill='#ffffff', stroke='#000000', stroke-width='3', stroke-miterlimit='10', pointer-events='none')
      
      g.ability-to-communicate
        rect(x='222', y='157', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', pointer-events='none')
        g(transform='translate(224,161)')
          switch
            foreignobject(pointer-events='all', width='146', height='78', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') ability to communicate with language
            text(x='73', y='50', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
      
      g.social-interaction.hide.step3
        rect(x='2', y='47', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', pointer-events='none')
        g(transform='translate(4,51)')
          switch
            foreignobject(pointer-events='all', width='146', height='78', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') abilities for social interaction
            text(x='73', y='50', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        path(d='M 153 103 L 162 98 L 205 166 L 213 160 L 217 194 L 188 176 L 196 171 Z', fill='#ffffff', stroke='#000000', stroke-width='3', stroke-miterlimit='10', pointer-events='none')

      g.core-knowledge-of-mind.hide.step2
        rect(x='2', y='267', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', pointer-events='none')
        g(transform='translate(4,271)')
          switch
            foreignobject(pointer-events='all', width='146', height='78', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') core knowledge of mind
            text(x='73', y='50', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        path(d='M 162 306 L 153 301 L 196 233 L 188 228 L 217 210 L 213 244 L 205 238 Z', fill='white', stroke='#000000', stroke-width='3', stroke-miterlimit='10', pointer-events='none')
      
      g.etc.hide.step4
        rect(x='2', y='377', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', stroke-dasharray='3 3', pointer-events='none')
        g(transform='translate(4,407)')
          switch
            foreignobject(pointer-events='all', width='146', height='26', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') ...
            text(x='73', y='24', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        path(d='M 160 414 L 150 411 L 205 239 L 196 236 L 219 212 L 224 245 L 215 242 Z', fill='white', stroke='#000000', stroke-width='3', stroke-miterlimit='10', pointer-events='none')
      
      g.experience-emotion-sensation.hide.step5
        rect(x='422', y='157', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', pointer-events='none')
        g(transform='translate(424,161)')
          switch
            foreignobject(pointer-events='all', width='146', height='78', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;')
                | experience
                br
                | emotion
                br
                | sensation
            text(x='73', y='50', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        //- this arrow goes into the box
        path(d='M 382 206 L 382 196 L 402 196 L 402 186 L 432 201 L 402 216 L 402 206 Z', fill='white', stroke='#000000', stroke-width='3', stroke-miterlimit='10', pointer-events='none')
      
      g.reflection.hide.step6
        rect(x='334', y='2', width='150', height='90', rx='14', ry='14', fill='none', stroke='white', pointer-events='none')
        g(transform='translate(336,19)')
          switch
            foreignobject(pointer-events='all', width='146', height='52', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') reflection on this
            text(x='73', y='37', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        //- this is the line above the ability and experience (indicating the scope of the reflection)
        path(d='M 252 127 L 552 127', fill='none', stroke='white', stroke-width='3', stroke-miterlimit='10', pointer-events='none')
      
      g.knowledge-knowledge.hide.step7
        rect(x='534', y='2', width='150', height='90', rx='14', ry='14', fill='none', stroke='#ffffff', pointer-events='none')
        g(transform='translate(536,6)')
          switch
            foreignobject(pointer-events='all', width='146', height='78', requiredfeatures='http://www.w3.org/TR/SVG11/feature#Extensibility')
              div(xmlns='http://www.w3.org/1999/xhtml', style='display: inline-block; font-size: 22px; font-family: Lato; color: rgb(255, 255, 255); line-height: 26px; vertical-align: top; width: 146px; white-space: normal; text-align: center;') knowledge knowledge of syntax
            text(x='73', y='50', fill='#FFFFFF', text-anchor='middle', font-size='22px', font-family='Lato') [Object]
        path(d='M 494 52 L 494 42 L 514 42 L 514 32 L 544 47 L 514 62 L 514 52 Z', fill='#ffffff', stroke='#000000', stroke-width='3', stroke-miterlimit='10', pointer-events='none')
  +steps(7)
  
  
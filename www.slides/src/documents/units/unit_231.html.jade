---cson
layout: 'deck_unit'
title: "Core System vs Module"
tags: []
description: """
  How is the notion of a core system related to that of modularity?
  ?"""
---

include ../../../fragments/unit_mixins
include ../../../fragments/origins_mixins






+slide_middle
  .notes: :t
    The problems with core knowledge look like they might be 
    the sort of problem a philospoher might be able to help with.
  .notes: :t
    Jerry Fodor has written a book called 'Modularity of Mind' about what he calls modules.
    And modules look a bit like core systems, as I'll explain.
    Further, Spelke herself has at one point made a connection.
    So let's have a look at the notion of modularity and see if that will help us.
  p.center core system = module?
  .slide
    p.em-above.handout.notes.show ‘In Fodor’s (1983) terms, visual tracking and preferential looking each may depend on 
      span.module modular mechanisms
      span .’
    .handout.notes.ctd \citep[p.\ 137]{spelke:1995_spatiotemporal}
    p.right.grey-text Spelke et al 1995, p. 137
    .slide
      +invert('.module')
      .notes So what is a modular mechanism?



section.slide
  +fodorOnModules({step:false, final:false, handout:true})
  .notes Modules are widely held to play a central role in explaining mental development and in accounts of the mind generally.
  .notes Jerry Fodor makes three claims about modules:

//-
  +slide({bkg:'modularity_photo_seq/Slide1.jpg'})
    p Modules
    ol
      li they are ‘the psychological systems whose operations present the world to thought’;
      li they ‘constitute a natural kind’; and
      li there is ‘a cluster of properties that they have in common … [they are] domain-specific computational systems characterized by informational encapsulation, high-speed, restricted access, neural specificity, and the rest’ (Fodor 1983: 101)

+slide
  .notes What are these properties?
  +propertiesOfModules({step:false, handout:true})
  +blur('li','2px',0)
  +unblur('li:eq(0)','2px',0)
  .notes: :t
    Domain specificity
  .slide
    +blur('li:eq(0)')
    +unblur('li:eq(1)')
    .notes: :t
      limited accessibility
    

section.slide
  .notes: :t
    Let me illustrate limited accessibility ...
  .notes: :t
    Limited accessbility is a familar feature of many cognitive systems.
    When you grasp an object with a precision grip, it turns out that there is a very 
    reliable pattern.
    At a certain point in moving towards it your fingers will reach a maximum grip aperture 
    which is normally a certain amount wider than the object to be grasped, and then start to close.
    Now there's no physiological reason why grasping should work like this, rather than grip hand 
    closing only once you contact the object.
    Maximum grip aperture shows anticipation of the object: the mechanism responsible for 
    guiding your action does so by representing various things including some features of 
    the object.
    But we ordinarily have no idea about this.
    The discovery of how grasping is controlled depended on high speed photography.
    This is an illustration of limited accessibility.
    (This can also illustrate information encapsulation and domain specificity.)
  .container_12
    .grid_4
      .words
        p maximum grip aperture
        p.right (source: Jeannerod 2009, figure 10.1)
    .grid_8
      img(src='/img/jeannerod_2009_fig10-1.png', style='max-height:600px;')

+slide
  +img('glover_2002_fig1a.png')
  p.source Glover (2002, figure 1a)
  .notes: :t
    Illusion sometimes affects perceptual judgements but not actions:
    information is in the system;
    information is not available to knowledge \citep{glover:2002_visual}.
  .notes: :t
    See further \citet{bruno:2009_when}:
    They argue that Glover & Dixon's model \citep{glover:2002_dynamic} is
    incorrect, at least for grasping (pointing is a different story), because
    it predicts that the presence or absence of visual information during
    grasping shouldn't matter. But it does.

+slide
  +img('vanWermeskerken_2013_fig1.png')
  p.source van Wermeskerken et al 2013, figure 1
  .notes: :t
    You also get evidence for information encapsulation in four month olds.
    To illustrate, consider \citet{vanwermeskerken:2013_getting} ...
  .notes: :t
    A Ponzo-like background can make one frog further away than the other.

+slide
  +img('vanWermeskerken_2013_fig2.png')
  p.source van Wermeskerken et al 2013, figure 2
  .notes: :t
    This affects which object four-month olds reach for,
    but does not affect the kinematics of their reaching actions.
    
+slide
  .notes What are these properties?
  +propertiesOfModules({step:false})
  +blur('li','2px',0)
  +unblur('li:eq(1)',0)
  .slide
    +blur('li:eq(1)')
    +unblur('li:eq(2)')
    .notes: :t
      Information encapsulation
  .slide
    +blur('li:eq(2)')
    +unblur('li:eq(3)')
    .notes: :t
      Innateness
    
  .slide
    +unblur('li')
    .notes So these are the key properties associated with modularity.


  
section.slide
  .notes: :t
    We've seen something like this list of properties before ...
    Compare the notion of a core system with the notion of a module
  .notes: :t
    The two definitions are different, but the differences are subtle enough that we don't want both.
    My recommendation: if you want a better definition of core system, adopt 
    core system = module as a working assumption and then look to research on modularity 
    because there's more of it.
  //- 
    .handout \subsection{Compare modularity}
    .handout Modules are ‘the psychological systems whose operations present the world to thought’; 
      | they ‘constitute a natural kind’; and 
      | there is ‘a cluster of properties that they have in common’ \citep[p.\ 101]{Fodor:1983dg}.
    .handout These properties include:
    .handout \begin{itemize}
    .handout \item domain specificity (modules deal with ‘eccentric’ bodies of knowledge)
    .handout \item limited accessibility (representations in modules are not usually inferentially integrated with knowledge)
    .handout \item information encapsulation (modules are unaffected by general knowledge or representations in other modules)
    .handout \item innateness (roughly, the information and operations of a module not straightforwardly consequences of learning; but see \citet{Samuels:2004ho}).
    .handout \end{itemize}
  .words: .container_12: .grid_5
    p ‘core systems are 
      ol
        li: span.innate largely innate, 
        li
          span.encapsulated  encapsulated
          span , and 
        li: span  unchanging, 
        li: span  arising from phylogenetically old systems 
        li: span  built upon the output of innate perceptual analyzers’ 
    p.right (Carey and Spelke 1996: 520)
  .slide
    .right-half-white
      .words: .container_12: .grid_6
        div(style='padding-right:1em;')
          p Modules are ‘the psychological 
            span.present-the-world(style='z-index:0;') systems whose operations present the world to thought
            span ’; 
            | they ‘constitute a natural kind’; and 
            | there is ‘a cluster of properties that they have in common’
          ol
            li: span.innate(style='z-index:0;')  innateness 
            li: span.encapsulated(style='z-index:0;')  information encapsulation 
            li: span  domain specificity 
            li: span  limited accessibility 
            li: span  ...
    .slide
      +highlight('.innate', 'pink')
    .slide
      +highlight('.encapsulated', 'blue')
    .slide
      +highlight('ol:eq(0) li:eq(4) span, .present-the-world', 'forestgreen')





+slide_middle
  p.center core system = module ?
  .notes: :t
    I think it is reasonable to identify core systems with modules and to
    largely ignore what different people say in introducing these ideas.
    The theory is not strong enough to support lots of distinctions.


  
+slide_middle
  p.notes.show Will the notion of modularity help us in meeting the 
    span.obj objections
    span  to the Core Knowledge View? 
  .slide
    +invert('.obj')
  .slide
    .notes Recall that the challenges were these:
    .notes.show.em-above
      +objectionsToCoreKnowledgeView
    .notes: :t
      Let’s go back and see what Fodor says about modules again ...
  .slide
    +highlight-row('.objections .multiple-definitions')
    .notes: :t
      Consider the first objection, that there are multiple defintions ...
    
    
section.slide
  .notes: :t
    Not all researchers agree about the properties of modules.  That they are 
    informationally encapsulated is denied by Dan Sperber and Deirdre Wilson (2002: 9), 
    Simon Baron-Cohen (1995) and some evolutionary psychologists (Buller and Hardcastle 2000: 309), 
    whereas Scholl and Leslie claim that information encapsulation is the essence of modularity 
    and that any other properties modules have follow from this one (1999b: 133; this also seems 
    to fit what David Marr had in mind, e.g. Marr 1982: 100-1).  According to Max Coltheart, 
    the key to modularity is not information encapsulation but domain specificity; he suggests 
    Fodor should have defined a module simply as 'a cognitive system whose application is domain 
    specific' (1999: 118).  Peter Carruthers, on the other hand, denies that domain specificity 
    is a feature of all modules (2006: 6).  Fodor stipulated that modules are 
    'innately specified' (1983: 37, 119), and some theorists assume that modules, 
    if they exist, must be innate in the sense of being implemented by neural regions 
    whose structures are genetically specified (e.g. de Haan, Humphreys and Johnson 2002: 207; 
    Tanaka and Gauthier 1997: 85); others hold that innateness is 'orthogonal' to modularity 
    (Karmiloff-Smith 2006: 568).  There is also debate over how to understand individual 
    properties modules might have (e.g. Hirschfeld and Gelman 1994 on the meanings of domain 
    specificity; Samuels 2004 on innateness).
  .notes: :t
    In short, then, theorists invoke many different notions of modularity, each barely different 
    from others.  You might think this is just a terminological issue.  I want to argue that 
    there is a substantial problem: we currently lack any theoretically viable account of what 
    modules are.  The problem is not that 'module' is used to mean different things-after all, 
    there might be different kinds of module.  The problem is that none of its various meanings 
    have been characterised rigorously enough.  All of the theorists mentioned above except Fodor 
    characterise notions of modularity by stipulating one or more properties their kind of module 
    is supposed to have.  This way of explicating notions of modularity fails to support principled 
    ways of resolving controversy.
  .notes: :t
    No key explanatory notion can be adequately characterised by listing properties because the 
    explanatory power of any notion depends in part on there being something which unifies its 
    properties and merely listing properties says nothing about why they cluster together.
  .notes: :t
    So much the same objections which applied to the very notion of core knowledge 
    appear to recur for module.  But note one interesting detail ...
  +fodorOnModules({step:true, final:false})



+slide_middle
  p.notes.show 
    span.fade-me Will the notion of modularity help us in meeting the 
    span.obj objections
    span  to the Core Knowledge View? 
  +fade('.fade-me',0)
  .em-above
    +objectionsToCoreKnowledgeView
  +highlight-row('.objections .multiple-definitions')
  .notes: :t
    We’ve been considering the first objection, that there are multiple defintions ...
  .slide
    +unhighlight-row('.objections .multiple-definitions')
    +highlight-row('.objections .list-unjustified')
    .notes: :t
      What about the objection that picking out a set of features is unjustified ...
    
    

+slide
  +fodorOnModules({step:false, final:true})
  .slide
    +highlight-row('li:eq(1)')
    +attr('li:eq(1)','style', 'z-index:1;')
    .notes: :t
      Interestingly, Fodor doesn't define modules by specifying a cluster of properties 
      (pace Sperber 2001: 51); he mentions the properties only as a way of gesturing towards 
      the phenomenon (Fodor 1983: 37) and he also says that modules constitute a natural kind 
      (see Fodor 1983: 101 quoted above). 


+slide_middle
  p.notes.show 
    span.fade-me Will the notion of modularity help us in meeting the 
    span.obj objections
    span  to the Core Knowledge View? 
  +fade('.fade-me',0)
  .em-above
    +objectionsToCoreKnowledgeView
  +highlight-row('.objections .list-unjustified')
  .notes: :t
    We’ve been considering the first objection, that there are multiple defintions ...
  .slide
    +unhighlight-row('.objections .list-unjustified')
    +highlight-row('.objections .list-unexplanatory')
    .notes: :t
      Same point applies to the claim that defining module by listing features is
      unexplanatory: if we are not listing features but identifying a natural kind,
      then the objection doesn’t quite get strarted.
    .notes: :t
      As far as the 
      ‘justification for definition by list-of-features’ and
      ‘definition by list-of-features rules out explanation’ problems go,
      everything rests on the idea that modules are a natural kind.
      I think this idea deserves careful scruitiny but as far as I know there's 
      only one paper on this topic, which is by me.
      I'm not going to talk about the paper here; let me leave it like this:
      if you want to invoke a notion of core knowledge or modularity,
      you have to reply to these problems.  And one way to reply to them---
      the only way I know---is to develop the idea that modules are a natural 
      kind.  If you want to know more ask me for my paper and I'll send it to you.
  .slide
    +unhighlight-row('.objections .list-unexplanatory')
    +highlight-row('.objections .mismatch')
    


+slide({bkg:'hood_2003_fig1.jpg'})
  p.source Hood et al 2003, figure 1
  .notes: :t
    Recall the discrepancy in looking vs search measures.  
    What property of modules could help us to 
    explain it?

+slide_middle
  +charlesRiveraOcclusionEndarkeningTable({final:true,highlight:true})






+slide
  +propertiesOfModules
  .slide
    +blur('.innateness, .information-encapsulation')
    .notes: :t
      We already considered innateness and inforamtion encapsulation
  .slide
    +highlight-row('.domain-specificity','grey')
  .slide
    +unhighlight-row('.domain-specificity','grey')
    +highlight-row('.limited-accessibility','grey')
    .notes: :t
      To say that a system or module exhibits limited accessibility is to say
      that the representations in the system are not usually inferentially
      integrated with knowledge.
    .notes: :t
      This is a key feature we need to assign to modular
      representations (=core knowledge) in order to explain the apparent
      discrepancies in the findings about when knowledge emerges in development.
    .notes: :t
      Limited accessibility explains why the representations might drive
      some actions (e.g. certain looking behaviours) but not others (e.g. 
      certain searching actions).
    .notes: :t
      But't the bare appeal to limited accessibility leaves open why the
      looking and not the searching (rather than conversely).
      Further, we have to explain why not searching with occlusion
      whereas not looking with endarkening.
      Clearly we can’t explain this pattern just by invoking information
      encapsulation.
    .notes: :t
      And, of course, to say that we can explain something by invoking
      information encapsulation is too much.
      After all, limited accessibility is more or less what we're trying to explain.
      But this is the first problem --- the problem with the standard way of
      characterising modularity and core systems merely by listing features.


+slide_middle
  p.center core system = module 
  p.em-above Some, not all, objections to the Core Knowledge View overcome:
  +objectionsToCoreKnowledgeView


+slide_coreKnowledgeViewGeneratesNoPredictions
  .notes: :t
    The main objection is unresolved